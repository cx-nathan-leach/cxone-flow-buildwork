---
# This YAML file demonstrates a CxOneFlow server configuration for all
# commonly used configuration options for all support SCM types.  Delete
# the parts that do not apply to your specific requirements.

# The CxOneFlow manual has a detailed list and explanation of all
# supported configuration options.

# The secret root path has files containing secret values that are loaded
# on startup.
secret-root-path: /path/to/your/secrets

# The URL of your CxOneFlow endpoint
server-base-url: https://cxoneflow.corp.com

# Optional: path to any custom Python scripts referenced in the
# service configurations.
script-path: /path/to/your/scripts

##############################
##### Common Definitions #####
##############################

# Common definitions can be repeatedly referenced using
# YAML anchor syntax.

# Optional: if you have an external AMQP endpoint, a single configuration
# can be referenced using YAML anchors.
amqp_common: &all-amqp
  amqp:
    amqp-url: amqps://rabbitmq.corp.com:5671

# Optional: Example for delivery of Sarif logs using a different AMQP
# server/virtual host than CxOneFlow.  It can also be shared across
# multiple feedback definitions
amqp_for_sarif: &sarif-amqp
  amqp:
    amqp-url: amqps://rabbitmq.corp.com/sarif_vhost:5671


# All service definitions will need a CheckmarxOne connection
# configuration.  This example uses a YAML anchor to reference
# a single connection.
cxone_all: &cxone
  cxone:
    tenant: my-tenant
    oauth:
      client-id: cxone-client-id
      client-secret: cxone-client-secret
    iam-endpoint: US
    api-endpoint: US

# Optional: Kickoff scans are used by CxOneFlow Audit:
# https://github.com/checkmarx-ts/cxone-flow-audit
kickoff_setup: &kickoff
  kickoff:
    ssh-public-key: id_ed25519.pub
    max-concurrent-scans: 5

# Scan configs will likely be common across all service definitions.
# This example uses YAML anchors to set a common configuration.
common_scan_cfg: &common-scan-cfg

  # Optional: Configure the use of Scan Agents.
  scan-agent:
    <<: *all-amqp
    private-key: scan-agent-private-key.pem
    allowed-agent-tags:
      - my-environment-1
      - my-environment-2
      - my-environment-3

  # Optional: Set default scan configuration options.
  scan-config:
    default-project-tags:
      my-tag-key: my-tag-value

    default-scan-engines:
      # Optional: default engines can be selected for each scan.  Default
      # configs per engine can also be configured following the API
      # option specification:
      #
      # https://checkmarx.stoplight.io/docs/checkmarx-one-api-reference-guide/branches/main/i3mwd8u3zyoox-run-a-scan
      #
      # WARNING: Setting these values overrides global/project engine settings
      # on ALL scans unless "allow override" is de-selected.  It is better to
      # define most scan engine defaults in Checkmarx One.
      sca:
        exploitablePath: true
      sast:
        languageMode: multi
      kics:
      containers:
      apisec:
      microengines:
        # Note: These are actually capitalized boolean strings, not
        # boolean values.
        scorecard: "False"
        2ms: "True"

  # Optional: Configure the parameters for supported feedback
  # methods.
  feedback:
    # This AMQP connection is for orchestrating
    # the feedback workflows.
    <<: *all-amqp
    pull-request:
      enabled: true

    push:
      enabled: true

      sarif-opts:
        SkipSca: false
        SkipKics: false
        SkipContainers: false
        SastOpts:
          SkipSast: false
          OmitApiResults: false


      # Delivery of Sarif logs can be done by AMQP, HTTP post to multiple
      # defined endpoints.  Both can be configured and delivery will be
      # processed via all defined methods.
      via-amqp:
        # This AMQP connection is for delivering Sarif logs.
        # It may not be the same AMQP server that is used for
        # orchestrating the feedback workflows.
        <<: *sarif-amqp
        exchange: SARIF_EXCHANGE
        shared-secret: sarif-hmac-shared-secret

      via-http-post:
        # Multiple HTTP endpoints can be defined.  Delivery order
        # is arbitrary.
        - endpoint-url: https://unstable.corp.com/sarif
          shared-secret: sarif-hmac-shared-secret
          delivery-retries: 6
          delivery-retry-delay-seconds: 30

        - endpoint-url: https://stable.corp.com/sarif
          shared-secret: sarif-hmac-shared-secret


# Optional: This example assigns groups to projects with repositories that
# match regular expressions.
common-group-assignments: &common-grouping
  project-groups:
    update-groups: true
    group-assigments:
      - repo-match: .*prod
        groups:
          - mycorp/mygroup/production
      - repo-match: .*dev
        groups:
          - mycorp/mygroup/development

###################################
##### SCM Service Definitions #####
###################################

## BitBucket Data Center
bbdc:
  - service-name: BBDC-all-repos
    repo-match: ^http(s)?:(\/){2}bitbucket.corp.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://bitbucket.corp.com/
      shared-secret: scm-shared-secret
      api-auth:
        token: bbdc-token

## Gitlab
gl:
  - service-name: Gitlab-enterprise-all-repos
    repo-match: ^http(s)?:(\/){2}gitlab.corp.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    connection:
      base-url: https://gitlab.corp.com
      api-url-suffix: api/v4
      shared-secret: scm-shared-secret
      api-auth:
        token: gitlab-pat

  - service-name: Gitlab-cloud-all-repos
    repo-match: ^http(s)?:(\/){2}gitlab.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://gitlab.com
      api-url-suffix: api/v4
      shared-secret: scm-shared-secret
      api-auth:
        token: gitlab-cloud-pat

## Github
gh:
  - service-name: GitHub-enterprise-github-app
    repo-match: ^http(s)?:(\/){2}github.corp.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://github.corp.com
      api-url-suffix: api/v3
      shared-secret: scm-shared-secret
      api-auth:
        app-private-key: github-ent-appkey

  - service-name: GitHub-enterprise-webhooks
    repo-match: ^http(s)?:(\/){2}github.corp.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://github.corp.com
      api-url-suffix: api/v3
      shared-secret: scm-shared-secret
      api-auth:
        token: gh-ent-pat

  - service-name: GitHub-cloud-github-app
    repo-match: ^http(s)?:(\/){2}github.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://api.github.com
      base-display-url: https://www.github.com
      shared-secret: scm-shared-secret
      api-auth:
        app-private-key: github-cloud-appkey

  - service-name: GitHub-cloud-webhooks
    repo-match: ^http(s)?:(\/){2}github.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://api.github.com
      base-display-url: https://www.github.com
      shared-secret: scm-shared-secret
      api-auth:
        token: gh-cloud-pat

## Azure DevOps

adoe:
  - service-name: ADO-enterprise
    repo-match: ^https://(.+@)?ado.corp.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://ado.corp.com
      shared-secret: scm-shared-secret
      api-auth:
        token: adoe-ent-token

  - service-name: ADO-cloud
    repo-match: ^https://(.+@)?dev.azure.com.*
    <<: *common-grouping
    <<: *cxone
    <<: *common-scan-cfg
    <<: *kickoff

    # Required: connection to the SCM for clone and API access
    connection:
      base-url: https://dev.azure.com
      shared-secret: scm-shared-secret
      api-auth:
        token: adoe-cloud-token
