on: 
  workflow_call:
    inputs:
      tag:
        description: 'The version tag to use for stamping build artifacts and naming generated archives'
        required: true
        type: string
      whl_tag:
        description: 'The version tag to use for stamping Python whl build artifacts'
        required: true
        type: string
      prerelease:
        description: 'Set to true if published build is a prerelease'
        type: boolean
        required: true
    secrets:
      PACKAGE_USER:
        required: true
      PACKAGE_PAT:
        required: true
env:
  DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/cxone/cxone-flow
                
jobs:
  publish-container:
    runs-on: ubuntu-latest
    needs: [compile-manual,scan-agent-deb-amd64,build-kickoff-whl]
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USER }}
          password: ${{ secrets.PACKAGE_PAT }}

      - name: Fetch Code @ tag ${{ inputs.tag }}
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          ref: refs/tags/${{ inputs.tag }}

  
  build-kickoff-whl:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          ref: ${{ inputs.tag }}

      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: "3.12"

      - name: Build package
        run: |
          echo "__version__='${{ inputs.whl_tag }}'" > cxoneflow_kickoff_api/__version__.py
          pip3 install build
          python3 -m build

      - name: Upload whl
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: whl-${{ github.run_number }}
          path: dist/*.whl


  compile-yaml-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Code @ tag ${{ inputs.tag }}
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          ref: refs/tags/${{ inputs.tag }}

      - name: Create tarball
        run: tar -C manual -czf config-examples.tgz quickstart_configs

      - name: Upload YAML example tarball
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: config-examples-tarball-${{ github.run_number }}
          path: config-examples.tgz
      
      - name: Create zip
        run: |
          pushd manual
          zip -r ../config-examples.zip quickstart_configs
          popd
        

      - name: Upload YAML example zip
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: config-examples-zip-${{ github.run_number }}
          path: config-examples.zip

  compile-manual:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Code @ tag ${{ inputs.tag }}
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          ref: refs/tags/${{ inputs.tag }}

      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: "3.12"
        
      - name: Edit manual's version stamp
        run: echo ${{ inputs.tag }} > manual/version.tex

      - name: Generate Latex Release Notes
        run: |
          python3 .github/workflows/scripts/json2tex.py manual/release_notes.json manual/release_notes-content.tex
          cat manual/release_notes-content.tex

      - name: Build PDF Manual
        uses: xu-cheng/latex-action@f1ca82cbed861b3534e2997dd584944f55b884ed
        with:
          root_file: manual/cxone-flow.tex
          work_in_root_file_dir: true

      - name: Upload manual
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: manual-${{ github.run_number }}
          path: manual/cxone-flow.pdf
  
      - name: Build PDF Release Notes
        uses: xu-cheng/latex-action@f1ca82cbed861b3534e2997dd584944f55b884ed
        with:
          root_file: release_notes/release_notes.tex
          work_in_root_file_dir: true

      - name: Upload release notes
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: release-notes-${{ github.run_number }}
          path: release_notes/release_notes.pdf

  scan-agent-deb-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Code @ tag ${{ inputs.tag }}
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          ref: refs/tags/${{ inputs.tag }}

      - name: Update version.txt
        run: |
            echo __version__=\"${{ inputs.tag }}\" > _version.py

      - name: Build deb package
        run: agent_packages/scan-agent/debian/build-package.sh ${{ inputs.tag }}

      - name: Upload deb amd64 package
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: deb-amd64-${{ github.run_number }}
          path: agent_packages/scan-agent/debian/*.deb

  publish-release:
    runs-on: ubuntu-latest
    needs: [publish-container,compile-manual,scan-agent-deb-amd64,build-kickoff-whl]
    steps:
      - name: Download whl
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: whl-${{ github.run_number }}

      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: "3.12"

      - name: Make release text
        run: |
          echo "# CxOneFlow ${{ inputs.tag }}" > release.md
          echo "" >> release.md
          python3 .github/workflows/scripts/json2md.py manual/release_notes.json ${{ inputs.tag }} >> release.md
          echo "" >> release.md
          echo The CxOneFlow ${{ inputs.tag }} Server is available in a container: >> release.md
          echo '```' >> release.md
          [ ${{ inputs.prerelease }} = false ] && echo "docker pull $DOCKER_REPO:latest" >> release.md || :
          echo "docker pull $DOCKER_REPO:${{ inputs.tag }}" >> release.md
          echo '```' >> release.md
          echo The CxOneFlow Resolver Agent is an optional component for running SCA Resolver prior to a scan.  It >> release.md
          echo can be downloaded as an installer package appropriate for supported operating systems. >> release.md

          echo "" >> release.md
          echo "" >> release.md
          echo "# CxOneFlow Kickoff API Client" >> release.md
          echo 'Installation can be performed by adding one of the following lines to your `requirements.txt` file:' >> release.md

          WHEEL_NAME=$(basename $(ls *.whl))
          WHEEL_HASH=$(pip3 hash $WHEEL_NAME | grep "^--")
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/download/${{ inputs.tag }}/$WHEEL_NAME"

          echo '```' >> release.md
          echo $RELEASE_URL >> release.md
          echo '```' >> release.md

          echo "## Hashes" >> release.md
          echo "### $WHEEL_NAME" >> release.md
          echo '```' >> release.md
          echo "$WHEEL_HASH" >> release.md
          echo '```' >> release.md


      - name: Download manual
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: manual-${{ github.run_number }}

      - name: Download release notes
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: release-notes-${{ github.run_number }}

      - name: Rename documentation artifacts
        run: |
          mv cxone-flow.pdf cxone-flow-manual-${{ inputs.tag }}.pdf
          mv release_notes.pdf cxone-flow-release-notes-${{ inputs.tag }}.pdf

      - name: Download deb-amd64
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: deb-amd64-${{ github.run_number }}

      - name: Download examples-tarball
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: config-examples-tarball-${{ github.run_number }}

      - name: Download examples-zip
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: config-examples-zip-${{ github.run_number }}


      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ./*.pdf, ./*.deb, ./*.whl, ./*.tgz, ./*.zip
          bodyFile: release.md
          name: ${{ inputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          tag: ${{ inputs.tag }}


  artifact-cleanup:
    runs-on: ubuntu-latest
    needs: [publish-release]
    steps:
      - uses: geekyeggo/delete-artifact@9d15d164b1dcd538ff1b1a2984bc2c0240986c3b
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: |
            release-notes-${{ github.run_number }}
            manual-${{ github.run_number }}
            deb-amd64-${{ github.run_number }}
            whl-${{ github.run_number }}
            config-examples-tarball-${{ github.run_number }}        
            config-examples-zip-${{ github.run_number }}        
